version: '3'
services:
  # Frontend service (React)
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_BACKEND_URL: "localhost:5001"
    ports:
      - "3000:80"
    depends_on:
      - backend

  # Backend service (Node.js)
  backend:
    build: ./backend
    ports:
      - "5001:5001"
    environment:
      # SQL credentials
      SQL_HOST: "mysql"
      SQL_PORT: "3306"
      SQL_USER: "root"
      SQL_PWD: "root"
      SQL_DB: "mysql"
      SQL_CONN_LIMIT: "10" # Max number of connections to pool
      SQL_QUEUE_LIMIT: "0" # Max number of pending connections; 0 means unlimited
      SQL_TABLE_NAME: "mysql.UserEdits"
      # Redis credentials
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_CHANNEL: "ioredis_channel"
      REDIS_SAVE_TIMEOUT: "5000" # Max interval (in milliseconds) to wait for new messages when persisting Redis stream to DB
      REDIS_MAXLEN: "1" # Minimum entries in Redis stream
      REDIS_SAVE_INTERVAL: "10000" # Interval (in milliseconds) for persisting messages to DB
      REDIS_RETRY_LIMIT: "3" # Maximum number of retry attempts before switching to a fixed retry interval
      REDIS_MAX_RETRY_INTERVAL: "5000" # Maximum interval (in milliseconds) between retries
      # Backend server port
      PORT: "5001"

  # Redis Service
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # MySQL Service
  mysql:
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  mysql-data:
